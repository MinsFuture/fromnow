name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  CI-CD:
    if: github.repository == 'MinsFuture/fromnow'  # 원본 리포지토리에서만 실행
    environment: actions
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application.yml
        if: |
          contains(github.ref, 'refs/heads/main') ||
          contains(github.ref, 'refs/heads/develop')
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker build & push to prod
        if: contains(github.ref, 'refs/heads/develop')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fromnow .
          docker push ${{ secrets.DOCKER_USERNAME }}/fromnow

      - name: Deploy to Azure Instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USERNAME }}
          key: ${{ secrets.AZURE_PRIVATE_KEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker stop fromnow-backend || true
            sudo docker rm fromnow-backend || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/fromnow
            sudo docker run --name fromnow-backend -d --restart always -p 8080:8080 -v /home/helloaway/firebase/fromnow-34d51-firebase-adminsdk-fiy84-7b40c25669.json:/config/fromnow-34d51-firebase-adminsdk-fiy84-7b40c25669.json --log-opt max-size=10m --log-opt max-file=5 ${{ secrets.DOCKER_USERNAME }}/fromnow
            sudo docker image prune -f
